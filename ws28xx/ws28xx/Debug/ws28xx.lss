
ws28xx.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000001d6  0000024a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         000006cc  00000000  00000000  00000254  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000097  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  000009b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000029  00000000  00000000  000009d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001c3  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000013e  00000000  00000000  00000bc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001d8  00000000  00000000  00000d01  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000030  00000000  00000000  00000edc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000fd  00000000  00000000  00000f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 00000042  00000000  00000000  00001009  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 ed       	ldi	r30, 0xD6	; 214
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 c5 00 	call	0x18a	; 0x18a <main>
  b6:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <WS2811RGB>:
#define PIN       0
#define PAUSE  1000     // msec
#define DELAY    10	// msec


DEFINE_WS2811_FN(WS2811RGB, PORT, PIN)
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	fc 01       	movw	r30, r24
  c4:	eb 01       	movw	r28, r22
  c6:	c1 15       	cp	r28, r1
  c8:	d1 05       	cpc	r29, r1
  ca:	09 f4       	brne	.+2      	; 0xce <WS2811RGB+0x10>
  cc:	5b c0       	rjmp	.+182    	; 0x184 <WS2811RGB+0xc6>
  ce:	21 91       	ld	r18, Z+
  d0:	31 91       	ld	r19, Z+
  d2:	41 91       	ld	r20, Z+
  d4:	b8 e0       	ldi	r27, 0x08	; 8
  d6:	af b7       	in	r26, 0x3f	; 63
  d8:	f8 94       	cli
  da:	c0 9a       	sbi	0x18, 0	; 24
  dc:	27 fd       	sbrc	r18, 7
  de:	01 c0       	rjmp	.+2      	; 0xe2 <WS2811RGB+0x24>
  e0:	c0 98       	cbi	0x18, 0	; 24
  e2:	27 fd       	sbrc	r18, 7
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <WS2811RGB+0x28>
	...
  f2:	22 0f       	add	r18, r18
  f4:	ba 95       	dec	r27
  f6:	c0 98       	cbi	0x18, 0	; 24
  f8:	81 f7       	brne	.-32     	; 0xda <WS2811RGB+0x1c>
  fa:	b7 e0       	ldi	r27, 0x07	; 7
  fc:	c0 9a       	sbi	0x18, 0	; 24
  fe:	37 fd       	sbrc	r19, 7
 100:	01 c0       	rjmp	.+2      	; 0x104 <WS2811RGB+0x46>
 102:	c0 98       	cbi	0x18, 0	; 24
 104:	37 fd       	sbrc	r19, 7
 106:	00 c0       	rjmp	.+0      	; 0x108 <WS2811RGB+0x4a>
	...
 114:	33 0f       	add	r19, r19
 116:	ba 95       	dec	r27
 118:	c0 98       	cbi	0x18, 0	; 24
 11a:	81 f7       	brne	.-32     	; 0xfc <WS2811RGB+0x3e>
 11c:	00 00       	nop
 11e:	c0 9a       	sbi	0x18, 0	; 24
 120:	27 fd       	sbrc	r18, 7
 122:	01 c0       	rjmp	.+2      	; 0x126 <WS2811RGB+0x68>
 124:	c0 98       	cbi	0x18, 0	; 24
 126:	27 fd       	sbrc	r18, 7
 128:	00 c0       	rjmp	.+0      	; 0x12a <WS2811RGB+0x6c>
 12a:	00 00       	nop
 12c:	00 00       	nop
 12e:	00 00       	nop
 130:	21 91       	ld	r18, Z+
 132:	31 91       	ld	r19, Z+
 134:	b7 e0       	ldi	r27, 0x07	; 7
 136:	c0 98       	cbi	0x18, 0	; 24
 138:	00 00       	nop
 13a:	00 00       	nop
 13c:	c0 9a       	sbi	0x18, 0	; 24
 13e:	47 fd       	sbrc	r20, 7
 140:	01 c0       	rjmp	.+2      	; 0x144 <WS2811RGB+0x86>
 142:	c0 98       	cbi	0x18, 0	; 24
 144:	47 fd       	sbrc	r20, 7
 146:	00 c0       	rjmp	.+0      	; 0x148 <WS2811RGB+0x8a>
	...
 154:	44 0f       	add	r20, r20
 156:	ba 95       	dec	r27
 158:	c0 98       	cbi	0x18, 0	; 24
 15a:	81 f7       	brne	.-32     	; 0x13c <WS2811RGB+0x7e>
 15c:	00 00       	nop
 15e:	c0 9a       	sbi	0x18, 0	; 24
 160:	47 fd       	sbrc	r20, 7
 162:	01 c0       	rjmp	.+2      	; 0x166 <WS2811RGB+0xa8>
 164:	c0 98       	cbi	0x18, 0	; 24
 166:	47 fd       	sbrc	r20, 7
 168:	00 c0       	rjmp	.+0      	; 0x16a <WS2811RGB+0xac>
 16a:	00 00       	nop
 16c:	00 00       	nop
 16e:	b8 e0       	ldi	r27, 0x08	; 8
 170:	21 97       	sbiw	r28, 0x01	; 1
 172:	19 f0       	breq	.+6      	; 0x17a <WS2811RGB+0xbc>
 174:	41 91       	ld	r20, Z+
 176:	c0 98       	cbi	0x18, 0	; 24
 178:	b0 cf       	rjmp	.-160    	; 0xda <WS2811RGB+0x1c>
 17a:	00 00       	nop
 17c:	c0 98       	cbi	0x18, 0	; 24
 17e:	00 00       	nop
 180:	00 00       	nop
 182:	af bf       	out	0x3f, r26	; 63
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	08 95       	ret

0000018a <main>:


int main(void)
{
 18a:	0f 93       	push	r16
 18c:	1f 93       	push	r17
 18e:	df 93       	push	r29
 190:	cf 93       	push	r28
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 196:	29 97       	sbiw	r28, 0x09	; 9
 198:	0f b6       	in	r0, 0x3f	; 63
 19a:	f8 94       	cli
 19c:	de bf       	out	0x3e, r29	; 62
 19e:	0f be       	out	0x3f, r0	; 63
 1a0:	cd bf       	out	0x3d, r28	; 61
    DDRB |= (1<<0);
 1a2:	b8 9a       	sbi	0x17, 0	; 23
    PORTB &= ~(1<<0);
 1a4:	c0 98       	cbi	0x18, 0	; 24
    //RGB_t rgb[1]={{0xFF,0xFF,0xFF}};
	RGB_t rgb[3] = {{0x99,0xFF,0xFF},{0,0,0},{0,0,0}};
 1a6:	de 01       	movw	r26, r28
 1a8:	11 96       	adiw	r26, 0x01	; 1
 1aa:	e0 e0       	ldi	r30, 0x00	; 0
 1ac:	f1 e0       	ldi	r31, 0x01	; 1
 1ae:	89 e0       	ldi	r24, 0x09	; 9
 1b0:	01 90       	ld	r0, Z+
 1b2:	0d 92       	st	X+, r0
 1b4:	81 50       	subi	r24, 0x01	; 1
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x26>
    while(1)
    {
        WS2811RGB(rgb, ARRAYLEN(rgb));
 1b8:	8e 01       	movw	r16, r28
 1ba:	0f 5f       	subi	r16, 0xFF	; 255
 1bc:	1f 4f       	sbci	r17, 0xFF	; 255
 1be:	c8 01       	movw	r24, r16
 1c0:	63 e0       	ldi	r22, 0x03	; 3
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	0e 94 5f 00 	call	0xbe	; 0xbe <WS2811RGB>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c8:	85 e8       	ldi	r24, 0x85	; 133
 1ca:	8a 95       	dec	r24
 1cc:	f1 f7       	brne	.-4      	; 0x1ca <main+0x40>
 1ce:	00 00       	nop
 1d0:	f6 cf       	rjmp	.-20     	; 0x1be <main+0x34>

000001d2 <_exit>:
 1d2:	f8 94       	cli

000001d4 <__stop_program>:
 1d4:	ff cf       	rjmp	.-2      	; 0x1d4 <__stop_program>
